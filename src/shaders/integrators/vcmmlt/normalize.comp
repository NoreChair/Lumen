#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_shader_atomic_float : require

#include "vcmmlt_commons.h"
#include "../../utils.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(binding = 0) buffer SceneDesc_ { SceneDesc scene_desc; };
layout(buffer_reference, scalar, buffer_reference_align = 4) buffer ChainStats { ChainData d[]; };
layout(push_constant) uniform _PushConstantRay { PCMLT pc_ray; };
ChainStats chain_stats = ChainStats(scene_desc.chain_stats_addr);
void main() {
    for (int c = 0; c < 2; c++) {
        chain_stats.d[c].normalization = chain_stats.d[c].total_luminance /
                                         float(chain_stats.d[c].lum_samples);
    }
}